name: Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
          - Terraform_apply
          - Terraform_destroy
      region:
        description: 'AWS Region'
        required: true
        default: 'us-west-2'
      
      uid:
        description: 'Unique Identifier'
        required: true
        default: '123456'

      resourceType:
        description: 'Resource Type'
        required: true
        type: choice
        options:
          - s3
          - ec2
      bucketName:
        description: 'S3 Bucket Name'
        required: false
        default: 'my-unique-bucket-nameerere23r3r44'
      
      instance_type:
        description: 'EC2 Instance Type'
        required: false
        default: 't2.micro'

jobs:
  terraform_apply:
    name: "Terraform Apply"
    if: ${{ github.event.inputs.action == 'Terraform_apply' }}
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_bucketName: ${{ github.event.inputs.bucketName }}
      TF_VAR_region: ${{ github.event.inputs.region }}
      TF_VAR_instance_type: ${{ github.event.inputs.instance_type }}
      TF_VAR_uid: ${{ github.event.inputs.uid }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5  # Specify the Terraform version you want to use
      

      - name: Terraform Init
        run: terraform init
        
        working-directory: terraform/${{ github.event.inputs.resourceType }}

      - name: Terraform Plan
        run: terraform plan
        
        working-directory: terraform/${{ github.event.inputs.resourceType }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -state-out=terraform/${{ github.event.inputs.uid }}.tfstate
        
        working-directory: terraform/${{ github.event.inputs.resourceType }}

  terraform_destroy:
    name: "Terraform Destroy"
    if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_bucketName: ${{ github.event.inputs.bucketName }}
      TF_VAR_region: ${{ github.event.inputs.region }}
      TF_VAR_instance_type: ${{ github.event.inputs.instance_type }}
      TF_VAR_uid: ${{ github.event.inputs.uid }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5  # Specify the Terraform version you want to use

      - name: Terraform Init
        run: terraform init
       
        working-directory: terraform/${{ github.event.inputs.resourceType }}

      - name: Show Destroy Plan
        run: terraform plan -destroy -state=terraform/${{ github.event.inputs.uid }}.tfstate
        continue-on-error: true
        
        working-directory: terraform/${{ github.event.inputs.resourceType }}

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: terraform/${{ github.event.inputs.resourceType }}

          
